/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.services.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.services.model.Agency;
import com.services.model.AgencyModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Agency service. Represents a row in the &quot;JPB_Agency&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.services.model.AgencyModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AgencyImpl}.
 * </p>
 *
 * @author Ankur Srivastava
 * @see AgencyImpl
 * @see com.services.model.Agency
 * @see com.services.model.AgencyModel
 * @generated
 */
public class AgencyModelImpl extends BaseModelImpl<Agency>
	implements AgencyModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a agency model instance should use the {@link com.services.model.Agency} interface instead.
	 */
	public static final String TABLE_NAME = "JPB_Agency";
	public static final Object[][] TABLE_COLUMNS = {
			{ "agencyId", Types.BIGINT },
			{ "agencyName", Types.VARCHAR },
			{ "owner", Types.VARCHAR },
			{ "contactNumber", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "active_", Types.BOOLEAN },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table JPB_Agency (agencyId LONG not null primary key,agencyName VARCHAR(75) null,owner VARCHAR(75) null,contactNumber VARCHAR(75) null,email VARCHAR(75) null,active_ BOOLEAN,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table JPB_Agency";
	public static final String ORDER_BY_JPQL = " ORDER BY agency.agencyName ASC";
	public static final String ORDER_BY_SQL = " ORDER BY JPB_Agency.agencyName ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.services.model.Agency"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.services.model.Agency"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.services.model.Agency"),
			true);
	public static long ACTIVE_COLUMN_BITMASK = 1L;
	public static long OWNER_COLUMN_BITMASK = 2L;
	public static long AGENCYNAME_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.services.model.Agency"));

	public AgencyModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _agencyId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAgencyId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _agencyId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Agency.class;
	}

	@Override
	public String getModelClassName() {
		return Agency.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("agencyId", getAgencyId());
		attributes.put("agencyName", getAgencyName());
		attributes.put("owner", getOwner());
		attributes.put("contactNumber", getContactNumber());
		attributes.put("email", getEmail());
		attributes.put("active", getActive());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long agencyId = (Long)attributes.get("agencyId");

		if (agencyId != null) {
			setAgencyId(agencyId);
		}

		String agencyName = (String)attributes.get("agencyName");

		if (agencyName != null) {
			setAgencyName(agencyName);
		}

		String owner = (String)attributes.get("owner");

		if (owner != null) {
			setOwner(owner);
		}

		String contactNumber = (String)attributes.get("contactNumber");

		if (contactNumber != null) {
			setContactNumber(contactNumber);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		Boolean active = (Boolean)attributes.get("active");

		if (active != null) {
			setActive(active);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getAgencyId() {
		return _agencyId;
	}

	@Override
	public void setAgencyId(long agencyId) {
		_agencyId = agencyId;
	}

	@Override
	public String getAgencyName() {
		if (_agencyName == null) {
			return StringPool.BLANK;
		}
		else {
			return _agencyName;
		}
	}

	@Override
	public void setAgencyName(String agencyName) {
		_columnBitmask = -1L;

		_agencyName = agencyName;
	}

	@Override
	public String getOwner() {
		if (_owner == null) {
			return StringPool.BLANK;
		}
		else {
			return _owner;
		}
	}

	@Override
	public void setOwner(String owner) {
		_columnBitmask |= OWNER_COLUMN_BITMASK;

		if (_originalOwner == null) {
			_originalOwner = _owner;
		}

		_owner = owner;
	}

	public String getOriginalOwner() {
		return GetterUtil.getString(_originalOwner);
	}

	@Override
	public String getContactNumber() {
		if (_contactNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactNumber;
		}
	}

	@Override
	public void setContactNumber(String contactNumber) {
		_contactNumber = contactNumber;
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@Override
	public boolean getActive() {
		return _active;
	}

	@Override
	public boolean isActive() {
		return _active;
	}

	@Override
	public void setActive(boolean active) {
		_columnBitmask |= ACTIVE_COLUMN_BITMASK;

		if (!_setOriginalActive) {
			_setOriginalActive = true;

			_originalActive = _active;
		}

		_active = active;
	}

	public boolean getOriginalActive() {
		return _originalActive;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Agency.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Agency toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Agency)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AgencyImpl agencyImpl = new AgencyImpl();

		agencyImpl.setAgencyId(getAgencyId());
		agencyImpl.setAgencyName(getAgencyName());
		agencyImpl.setOwner(getOwner());
		agencyImpl.setContactNumber(getContactNumber());
		agencyImpl.setEmail(getEmail());
		agencyImpl.setActive(getActive());
		agencyImpl.setCreateDate(getCreateDate());
		agencyImpl.setModifiedDate(getModifiedDate());

		agencyImpl.resetOriginalValues();

		return agencyImpl;
	}

	@Override
	public int compareTo(Agency agency) {
		int value = 0;

		value = getAgencyName().compareTo(agency.getAgencyName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Agency)) {
			return false;
		}

		Agency agency = (Agency)obj;

		long primaryKey = agency.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		AgencyModelImpl agencyModelImpl = this;

		agencyModelImpl._originalOwner = agencyModelImpl._owner;

		agencyModelImpl._originalActive = agencyModelImpl._active;

		agencyModelImpl._setOriginalActive = false;

		agencyModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Agency> toCacheModel() {
		AgencyCacheModel agencyCacheModel = new AgencyCacheModel();

		agencyCacheModel.agencyId = getAgencyId();

		agencyCacheModel.agencyName = getAgencyName();

		String agencyName = agencyCacheModel.agencyName;

		if ((agencyName != null) && (agencyName.length() == 0)) {
			agencyCacheModel.agencyName = null;
		}

		agencyCacheModel.owner = getOwner();

		String owner = agencyCacheModel.owner;

		if ((owner != null) && (owner.length() == 0)) {
			agencyCacheModel.owner = null;
		}

		agencyCacheModel.contactNumber = getContactNumber();

		String contactNumber = agencyCacheModel.contactNumber;

		if ((contactNumber != null) && (contactNumber.length() == 0)) {
			agencyCacheModel.contactNumber = null;
		}

		agencyCacheModel.email = getEmail();

		String email = agencyCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			agencyCacheModel.email = null;
		}

		agencyCacheModel.active = getActive();

		Date createDate = getCreateDate();

		if (createDate != null) {
			agencyCacheModel.createDate = createDate.getTime();
		}
		else {
			agencyCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			agencyCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			agencyCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return agencyCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{agencyId=");
		sb.append(getAgencyId());
		sb.append(", agencyName=");
		sb.append(getAgencyName());
		sb.append(", owner=");
		sb.append(getOwner());
		sb.append(", contactNumber=");
		sb.append(getContactNumber());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", active=");
		sb.append(getActive());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.services.model.Agency");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>agencyId</column-name><column-value><![CDATA[");
		sb.append(getAgencyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>agencyName</column-name><column-value><![CDATA[");
		sb.append(getAgencyName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>owner</column-name><column-value><![CDATA[");
		sb.append(getOwner());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactNumber</column-name><column-value><![CDATA[");
		sb.append(getContactNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>active</column-name><column-value><![CDATA[");
		sb.append(getActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Agency.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Agency.class };
	private long _agencyId;
	private String _agencyName;
	private String _owner;
	private String _originalOwner;
	private String _contactNumber;
	private String _email;
	private boolean _active;
	private boolean _originalActive;
	private boolean _setOriginalActive;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private Agency _escapedModel;
}