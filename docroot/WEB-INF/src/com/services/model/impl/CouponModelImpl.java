/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.services.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.services.model.Coupon;
import com.services.model.CouponModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Coupon service. Represents a row in the &quot;JPB_Coupon&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.services.model.CouponModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CouponImpl}.
 * </p>
 *
 * @author Ankur Srivastava
 * @see CouponImpl
 * @see com.services.model.Coupon
 * @see com.services.model.CouponModel
 * @generated
 */
public class CouponModelImpl extends BaseModelImpl<Coupon>
	implements CouponModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a coupon model instance should use the {@link com.services.model.Coupon} interface instead.
	 */
	public static final String TABLE_NAME = "JPB_Coupon";
	public static final Object[][] TABLE_COLUMNS = {
			{ "couponId", Types.BIGINT },
			{ "couponName", Types.VARCHAR },
			{ "price", Types.BIGINT },
			{ "validTill", Types.TIMESTAMP },
			{ "audience", Types.BOOLEAN },
			{ "createDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table JPB_Coupon (couponId LONG not null primary key,couponName VARCHAR(75) null,price LONG,validTill DATE null,audience BOOLEAN,createDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table JPB_Coupon";
	public static final String ORDER_BY_JPQL = " ORDER BY coupon.couponId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY JPB_Coupon.couponId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.services.model.Coupon"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.services.model.Coupon"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.services.model.Coupon"),
			true);
	public static long COUPONNAME_COLUMN_BITMASK = 1L;
	public static long COUPONID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.services.model.Coupon"));

	public CouponModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _couponId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCouponId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _couponId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Coupon.class;
	}

	@Override
	public String getModelClassName() {
		return Coupon.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("couponId", getCouponId());
		attributes.put("couponName", getCouponName());
		attributes.put("price", getPrice());
		attributes.put("validTill", getValidTill());
		attributes.put("audience", getAudience());
		attributes.put("createDate", getCreateDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long couponId = (Long)attributes.get("couponId");

		if (couponId != null) {
			setCouponId(couponId);
		}

		String couponName = (String)attributes.get("couponName");

		if (couponName != null) {
			setCouponName(couponName);
		}

		Long price = (Long)attributes.get("price");

		if (price != null) {
			setPrice(price);
		}

		Date validTill = (Date)attributes.get("validTill");

		if (validTill != null) {
			setValidTill(validTill);
		}

		Boolean audience = (Boolean)attributes.get("audience");

		if (audience != null) {
			setAudience(audience);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}
	}

	@Override
	public long getCouponId() {
		return _couponId;
	}

	@Override
	public void setCouponId(long couponId) {
		_couponId = couponId;
	}

	@Override
	public String getCouponName() {
		if (_couponName == null) {
			return StringPool.BLANK;
		}
		else {
			return _couponName;
		}
	}

	@Override
	public void setCouponName(String couponName) {
		_columnBitmask |= COUPONNAME_COLUMN_BITMASK;

		if (_originalCouponName == null) {
			_originalCouponName = _couponName;
		}

		_couponName = couponName;
	}

	public String getOriginalCouponName() {
		return GetterUtil.getString(_originalCouponName);
	}

	@Override
	public long getPrice() {
		return _price;
	}

	@Override
	public void setPrice(long price) {
		_price = price;
	}

	@Override
	public Date getValidTill() {
		return _validTill;
	}

	@Override
	public void setValidTill(Date validTill) {
		_validTill = validTill;
	}

	@Override
	public boolean getAudience() {
		return _audience;
	}

	@Override
	public boolean isAudience() {
		return _audience;
	}

	@Override
	public void setAudience(boolean audience) {
		_audience = audience;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Coupon.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Coupon toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Coupon)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CouponImpl couponImpl = new CouponImpl();

		couponImpl.setCouponId(getCouponId());
		couponImpl.setCouponName(getCouponName());
		couponImpl.setPrice(getPrice());
		couponImpl.setValidTill(getValidTill());
		couponImpl.setAudience(getAudience());
		couponImpl.setCreateDate(getCreateDate());

		couponImpl.resetOriginalValues();

		return couponImpl;
	}

	@Override
	public int compareTo(Coupon coupon) {
		long primaryKey = coupon.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Coupon)) {
			return false;
		}

		Coupon coupon = (Coupon)obj;

		long primaryKey = coupon.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CouponModelImpl couponModelImpl = this;

		couponModelImpl._originalCouponName = couponModelImpl._couponName;

		couponModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Coupon> toCacheModel() {
		CouponCacheModel couponCacheModel = new CouponCacheModel();

		couponCacheModel.couponId = getCouponId();

		couponCacheModel.couponName = getCouponName();

		String couponName = couponCacheModel.couponName;

		if ((couponName != null) && (couponName.length() == 0)) {
			couponCacheModel.couponName = null;
		}

		couponCacheModel.price = getPrice();

		Date validTill = getValidTill();

		if (validTill != null) {
			couponCacheModel.validTill = validTill.getTime();
		}
		else {
			couponCacheModel.validTill = Long.MIN_VALUE;
		}

		couponCacheModel.audience = getAudience();

		Date createDate = getCreateDate();

		if (createDate != null) {
			couponCacheModel.createDate = createDate.getTime();
		}
		else {
			couponCacheModel.createDate = Long.MIN_VALUE;
		}

		return couponCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{couponId=");
		sb.append(getCouponId());
		sb.append(", couponName=");
		sb.append(getCouponName());
		sb.append(", price=");
		sb.append(getPrice());
		sb.append(", validTill=");
		sb.append(getValidTill());
		sb.append(", audience=");
		sb.append(getAudience());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.services.model.Coupon");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>couponId</column-name><column-value><![CDATA[");
		sb.append(getCouponId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>couponName</column-name><column-value><![CDATA[");
		sb.append(getCouponName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>price</column-name><column-value><![CDATA[");
		sb.append(getPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>validTill</column-name><column-value><![CDATA[");
		sb.append(getValidTill());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>audience</column-name><column-value><![CDATA[");
		sb.append(getAudience());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Coupon.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Coupon.class };
	private long _couponId;
	private String _couponName;
	private String _originalCouponName;
	private long _price;
	private Date _validTill;
	private boolean _audience;
	private Date _createDate;
	private long _columnBitmask;
	private Coupon _escapedModel;
}