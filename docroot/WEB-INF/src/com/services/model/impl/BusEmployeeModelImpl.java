/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.services.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.services.model.BusEmployee;
import com.services.model.BusEmployeeModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the BusEmployee service. Represents a row in the &quot;JPB_BusEmployee&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.services.model.BusEmployeeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BusEmployeeImpl}.
 * </p>
 *
 * @author Ankur Srivastava
 * @see BusEmployeeImpl
 * @see com.services.model.BusEmployee
 * @see com.services.model.BusEmployeeModel
 * @generated
 */
public class BusEmployeeModelImpl extends BaseModelImpl<BusEmployee>
	implements BusEmployeeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a bus employee model instance should use the {@link com.services.model.BusEmployee} interface instead.
	 */
	public static final String TABLE_NAME = "JPB_BusEmployee";
	public static final Object[][] TABLE_COLUMNS = {
			{ "beId", Types.BIGINT },
			{ "beName", Types.VARCHAR },
			{ "agency", Types.BIGINT },
			{ "contactNumber", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "licenseNumber", Types.VARCHAR },
			{ "alternateIdNumber", Types.VARCHAR },
			{ "active_", Types.BOOLEAN },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table JPB_BusEmployee (beId LONG not null primary key,beName VARCHAR(75) null,agency LONG,contactNumber VARCHAR(75) null,email VARCHAR(75) null,licenseNumber VARCHAR(75) null,alternateIdNumber VARCHAR(75) null,active_ BOOLEAN,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table JPB_BusEmployee";
	public static final String ORDER_BY_JPQL = " ORDER BY busEmployee.beName ASC";
	public static final String ORDER_BY_SQL = " ORDER BY JPB_BusEmployee.beName ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.services.model.BusEmployee"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.services.model.BusEmployee"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.services.model.BusEmployee"),
			true);
	public static long ACTIVE_COLUMN_BITMASK = 1L;
	public static long AGENCY_COLUMN_BITMASK = 2L;
	public static long BENAME_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.services.model.BusEmployee"));

	public BusEmployeeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _beId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _beId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BusEmployee.class;
	}

	@Override
	public String getModelClassName() {
		return BusEmployee.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("beId", getBeId());
		attributes.put("beName", getBeName());
		attributes.put("agency", getAgency());
		attributes.put("contactNumber", getContactNumber());
		attributes.put("email", getEmail());
		attributes.put("licenseNumber", getLicenseNumber());
		attributes.put("alternateIdNumber", getAlternateIdNumber());
		attributes.put("active", getActive());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long beId = (Long)attributes.get("beId");

		if (beId != null) {
			setBeId(beId);
		}

		String beName = (String)attributes.get("beName");

		if (beName != null) {
			setBeName(beName);
		}

		Long agency = (Long)attributes.get("agency");

		if (agency != null) {
			setAgency(agency);
		}

		String contactNumber = (String)attributes.get("contactNumber");

		if (contactNumber != null) {
			setContactNumber(contactNumber);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String licenseNumber = (String)attributes.get("licenseNumber");

		if (licenseNumber != null) {
			setLicenseNumber(licenseNumber);
		}

		String alternateIdNumber = (String)attributes.get("alternateIdNumber");

		if (alternateIdNumber != null) {
			setAlternateIdNumber(alternateIdNumber);
		}

		Boolean active = (Boolean)attributes.get("active");

		if (active != null) {
			setActive(active);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getBeId() {
		return _beId;
	}

	@Override
	public void setBeId(long beId) {
		_beId = beId;
	}

	@Override
	public String getBeName() {
		if (_beName == null) {
			return StringPool.BLANK;
		}
		else {
			return _beName;
		}
	}

	@Override
	public void setBeName(String beName) {
		_columnBitmask = -1L;

		_beName = beName;
	}

	@Override
	public long getAgency() {
		return _agency;
	}

	@Override
	public void setAgency(long agency) {
		_columnBitmask |= AGENCY_COLUMN_BITMASK;

		if (!_setOriginalAgency) {
			_setOriginalAgency = true;

			_originalAgency = _agency;
		}

		_agency = agency;
	}

	public long getOriginalAgency() {
		return _originalAgency;
	}

	@Override
	public String getContactNumber() {
		if (_contactNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactNumber;
		}
	}

	@Override
	public void setContactNumber(String contactNumber) {
		_contactNumber = contactNumber;
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@Override
	public String getLicenseNumber() {
		if (_licenseNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _licenseNumber;
		}
	}

	@Override
	public void setLicenseNumber(String licenseNumber) {
		_licenseNumber = licenseNumber;
	}

	@Override
	public String getAlternateIdNumber() {
		if (_alternateIdNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _alternateIdNumber;
		}
	}

	@Override
	public void setAlternateIdNumber(String alternateIdNumber) {
		_alternateIdNumber = alternateIdNumber;
	}

	@Override
	public boolean getActive() {
		return _active;
	}

	@Override
	public boolean isActive() {
		return _active;
	}

	@Override
	public void setActive(boolean active) {
		_columnBitmask |= ACTIVE_COLUMN_BITMASK;

		if (!_setOriginalActive) {
			_setOriginalActive = true;

			_originalActive = _active;
		}

		_active = active;
	}

	public boolean getOriginalActive() {
		return _originalActive;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			BusEmployee.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BusEmployee toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (BusEmployee)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BusEmployeeImpl busEmployeeImpl = new BusEmployeeImpl();

		busEmployeeImpl.setBeId(getBeId());
		busEmployeeImpl.setBeName(getBeName());
		busEmployeeImpl.setAgency(getAgency());
		busEmployeeImpl.setContactNumber(getContactNumber());
		busEmployeeImpl.setEmail(getEmail());
		busEmployeeImpl.setLicenseNumber(getLicenseNumber());
		busEmployeeImpl.setAlternateIdNumber(getAlternateIdNumber());
		busEmployeeImpl.setActive(getActive());
		busEmployeeImpl.setCreateDate(getCreateDate());
		busEmployeeImpl.setModifiedDate(getModifiedDate());

		busEmployeeImpl.resetOriginalValues();

		return busEmployeeImpl;
	}

	@Override
	public int compareTo(BusEmployee busEmployee) {
		int value = 0;

		value = getBeName().compareTo(busEmployee.getBeName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof BusEmployee)) {
			return false;
		}

		BusEmployee busEmployee = (BusEmployee)obj;

		long primaryKey = busEmployee.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		BusEmployeeModelImpl busEmployeeModelImpl = this;

		busEmployeeModelImpl._originalAgency = busEmployeeModelImpl._agency;

		busEmployeeModelImpl._setOriginalAgency = false;

		busEmployeeModelImpl._originalActive = busEmployeeModelImpl._active;

		busEmployeeModelImpl._setOriginalActive = false;

		busEmployeeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<BusEmployee> toCacheModel() {
		BusEmployeeCacheModel busEmployeeCacheModel = new BusEmployeeCacheModel();

		busEmployeeCacheModel.beId = getBeId();

		busEmployeeCacheModel.beName = getBeName();

		String beName = busEmployeeCacheModel.beName;

		if ((beName != null) && (beName.length() == 0)) {
			busEmployeeCacheModel.beName = null;
		}

		busEmployeeCacheModel.agency = getAgency();

		busEmployeeCacheModel.contactNumber = getContactNumber();

		String contactNumber = busEmployeeCacheModel.contactNumber;

		if ((contactNumber != null) && (contactNumber.length() == 0)) {
			busEmployeeCacheModel.contactNumber = null;
		}

		busEmployeeCacheModel.email = getEmail();

		String email = busEmployeeCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			busEmployeeCacheModel.email = null;
		}

		busEmployeeCacheModel.licenseNumber = getLicenseNumber();

		String licenseNumber = busEmployeeCacheModel.licenseNumber;

		if ((licenseNumber != null) && (licenseNumber.length() == 0)) {
			busEmployeeCacheModel.licenseNumber = null;
		}

		busEmployeeCacheModel.alternateIdNumber = getAlternateIdNumber();

		String alternateIdNumber = busEmployeeCacheModel.alternateIdNumber;

		if ((alternateIdNumber != null) && (alternateIdNumber.length() == 0)) {
			busEmployeeCacheModel.alternateIdNumber = null;
		}

		busEmployeeCacheModel.active = getActive();

		Date createDate = getCreateDate();

		if (createDate != null) {
			busEmployeeCacheModel.createDate = createDate.getTime();
		}
		else {
			busEmployeeCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			busEmployeeCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			busEmployeeCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return busEmployeeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{beId=");
		sb.append(getBeId());
		sb.append(", beName=");
		sb.append(getBeName());
		sb.append(", agency=");
		sb.append(getAgency());
		sb.append(", contactNumber=");
		sb.append(getContactNumber());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", licenseNumber=");
		sb.append(getLicenseNumber());
		sb.append(", alternateIdNumber=");
		sb.append(getAlternateIdNumber());
		sb.append(", active=");
		sb.append(getActive());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.services.model.BusEmployee");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>beId</column-name><column-value><![CDATA[");
		sb.append(getBeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>beName</column-name><column-value><![CDATA[");
		sb.append(getBeName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>agency</column-name><column-value><![CDATA[");
		sb.append(getAgency());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactNumber</column-name><column-value><![CDATA[");
		sb.append(getContactNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>licenseNumber</column-name><column-value><![CDATA[");
		sb.append(getLicenseNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>alternateIdNumber</column-name><column-value><![CDATA[");
		sb.append(getAlternateIdNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>active</column-name><column-value><![CDATA[");
		sb.append(getActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = BusEmployee.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			BusEmployee.class
		};
	private long _beId;
	private String _beName;
	private long _agency;
	private long _originalAgency;
	private boolean _setOriginalAgency;
	private String _contactNumber;
	private String _email;
	private String _licenseNumber;
	private String _alternateIdNumber;
	private boolean _active;
	private boolean _originalActive;
	private boolean _setOriginalActive;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private BusEmployee _escapedModel;
}