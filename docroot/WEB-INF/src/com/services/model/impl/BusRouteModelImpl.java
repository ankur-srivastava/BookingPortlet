/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.services.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.services.model.BusRoute;
import com.services.model.BusRouteModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the BusRoute service. Represents a row in the &quot;JPB_BusRoute&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.services.model.BusRouteModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BusRouteImpl}.
 * </p>
 *
 * @author Ankur Srivastava
 * @see BusRouteImpl
 * @see com.services.model.BusRoute
 * @see com.services.model.BusRouteModel
 * @generated
 */
public class BusRouteModelImpl extends BaseModelImpl<BusRoute>
	implements BusRouteModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a bus route model instance should use the {@link com.services.model.BusRoute} interface instead.
	 */
	public static final String TABLE_NAME = "JPB_BusRoute";
	public static final Object[][] TABLE_COLUMNS = {
			{ "brId", Types.BIGINT },
			{ "busId", Types.BIGINT },
			{ "startLocation", Types.BIGINT },
			{ "endLocation", Types.BIGINT },
			{ "midLocation1", Types.BIGINT },
			{ "midLocation2", Types.BIGINT },
			{ "active_", Types.BOOLEAN },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table JPB_BusRoute (brId LONG not null primary key,busId LONG,startLocation LONG,endLocation LONG,midLocation1 LONG,midLocation2 LONG,active_ BOOLEAN,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table JPB_BusRoute";
	public static final String ORDER_BY_JPQL = " ORDER BY busRoute.busId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY JPB_BusRoute.busId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.services.model.BusRoute"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.services.model.BusRoute"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.services.model.BusRoute"),
			true);
	public static long ACTIVE_COLUMN_BITMASK = 1L;
	public static long BUSID_COLUMN_BITMASK = 2L;
	public static long ENDLOCATION_COLUMN_BITMASK = 4L;
	public static long STARTLOCATION_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.services.model.BusRoute"));

	public BusRouteModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _brId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBrId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _brId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BusRoute.class;
	}

	@Override
	public String getModelClassName() {
		return BusRoute.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("brId", getBrId());
		attributes.put("busId", getBusId());
		attributes.put("startLocation", getStartLocation());
		attributes.put("endLocation", getEndLocation());
		attributes.put("midLocation1", getMidLocation1());
		attributes.put("midLocation2", getMidLocation2());
		attributes.put("active", getActive());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long brId = (Long)attributes.get("brId");

		if (brId != null) {
			setBrId(brId);
		}

		Long busId = (Long)attributes.get("busId");

		if (busId != null) {
			setBusId(busId);
		}

		Long startLocation = (Long)attributes.get("startLocation");

		if (startLocation != null) {
			setStartLocation(startLocation);
		}

		Long endLocation = (Long)attributes.get("endLocation");

		if (endLocation != null) {
			setEndLocation(endLocation);
		}

		Long midLocation1 = (Long)attributes.get("midLocation1");

		if (midLocation1 != null) {
			setMidLocation1(midLocation1);
		}

		Long midLocation2 = (Long)attributes.get("midLocation2");

		if (midLocation2 != null) {
			setMidLocation2(midLocation2);
		}

		Boolean active = (Boolean)attributes.get("active");

		if (active != null) {
			setActive(active);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getBrId() {
		return _brId;
	}

	@Override
	public void setBrId(long brId) {
		_brId = brId;
	}

	@Override
	public long getBusId() {
		return _busId;
	}

	@Override
	public void setBusId(long busId) {
		_columnBitmask = -1L;

		if (!_setOriginalBusId) {
			_setOriginalBusId = true;

			_originalBusId = _busId;
		}

		_busId = busId;
	}

	public long getOriginalBusId() {
		return _originalBusId;
	}

	@Override
	public long getStartLocation() {
		return _startLocation;
	}

	@Override
	public void setStartLocation(long startLocation) {
		_columnBitmask |= STARTLOCATION_COLUMN_BITMASK;

		if (!_setOriginalStartLocation) {
			_setOriginalStartLocation = true;

			_originalStartLocation = _startLocation;
		}

		_startLocation = startLocation;
	}

	public long getOriginalStartLocation() {
		return _originalStartLocation;
	}

	@Override
	public long getEndLocation() {
		return _endLocation;
	}

	@Override
	public void setEndLocation(long endLocation) {
		_columnBitmask |= ENDLOCATION_COLUMN_BITMASK;

		if (!_setOriginalEndLocation) {
			_setOriginalEndLocation = true;

			_originalEndLocation = _endLocation;
		}

		_endLocation = endLocation;
	}

	public long getOriginalEndLocation() {
		return _originalEndLocation;
	}

	@Override
	public long getMidLocation1() {
		return _midLocation1;
	}

	@Override
	public void setMidLocation1(long midLocation1) {
		_midLocation1 = midLocation1;
	}

	@Override
	public long getMidLocation2() {
		return _midLocation2;
	}

	@Override
	public void setMidLocation2(long midLocation2) {
		_midLocation2 = midLocation2;
	}

	@Override
	public boolean getActive() {
		return _active;
	}

	@Override
	public boolean isActive() {
		return _active;
	}

	@Override
	public void setActive(boolean active) {
		_columnBitmask |= ACTIVE_COLUMN_BITMASK;

		if (!_setOriginalActive) {
			_setOriginalActive = true;

			_originalActive = _active;
		}

		_active = active;
	}

	public boolean getOriginalActive() {
		return _originalActive;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			BusRoute.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BusRoute toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (BusRoute)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BusRouteImpl busRouteImpl = new BusRouteImpl();

		busRouteImpl.setBrId(getBrId());
		busRouteImpl.setBusId(getBusId());
		busRouteImpl.setStartLocation(getStartLocation());
		busRouteImpl.setEndLocation(getEndLocation());
		busRouteImpl.setMidLocation1(getMidLocation1());
		busRouteImpl.setMidLocation2(getMidLocation2());
		busRouteImpl.setActive(getActive());
		busRouteImpl.setCreateDate(getCreateDate());
		busRouteImpl.setModifiedDate(getModifiedDate());

		busRouteImpl.resetOriginalValues();

		return busRouteImpl;
	}

	@Override
	public int compareTo(BusRoute busRoute) {
		int value = 0;

		if (getBusId() < busRoute.getBusId()) {
			value = -1;
		}
		else if (getBusId() > busRoute.getBusId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof BusRoute)) {
			return false;
		}

		BusRoute busRoute = (BusRoute)obj;

		long primaryKey = busRoute.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		BusRouteModelImpl busRouteModelImpl = this;

		busRouteModelImpl._originalBusId = busRouteModelImpl._busId;

		busRouteModelImpl._setOriginalBusId = false;

		busRouteModelImpl._originalStartLocation = busRouteModelImpl._startLocation;

		busRouteModelImpl._setOriginalStartLocation = false;

		busRouteModelImpl._originalEndLocation = busRouteModelImpl._endLocation;

		busRouteModelImpl._setOriginalEndLocation = false;

		busRouteModelImpl._originalActive = busRouteModelImpl._active;

		busRouteModelImpl._setOriginalActive = false;

		busRouteModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<BusRoute> toCacheModel() {
		BusRouteCacheModel busRouteCacheModel = new BusRouteCacheModel();

		busRouteCacheModel.brId = getBrId();

		busRouteCacheModel.busId = getBusId();

		busRouteCacheModel.startLocation = getStartLocation();

		busRouteCacheModel.endLocation = getEndLocation();

		busRouteCacheModel.midLocation1 = getMidLocation1();

		busRouteCacheModel.midLocation2 = getMidLocation2();

		busRouteCacheModel.active = getActive();

		Date createDate = getCreateDate();

		if (createDate != null) {
			busRouteCacheModel.createDate = createDate.getTime();
		}
		else {
			busRouteCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			busRouteCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			busRouteCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return busRouteCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{brId=");
		sb.append(getBrId());
		sb.append(", busId=");
		sb.append(getBusId());
		sb.append(", startLocation=");
		sb.append(getStartLocation());
		sb.append(", endLocation=");
		sb.append(getEndLocation());
		sb.append(", midLocation1=");
		sb.append(getMidLocation1());
		sb.append(", midLocation2=");
		sb.append(getMidLocation2());
		sb.append(", active=");
		sb.append(getActive());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.services.model.BusRoute");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>brId</column-name><column-value><![CDATA[");
		sb.append(getBrId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>busId</column-name><column-value><![CDATA[");
		sb.append(getBusId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startLocation</column-name><column-value><![CDATA[");
		sb.append(getStartLocation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endLocation</column-name><column-value><![CDATA[");
		sb.append(getEndLocation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>midLocation1</column-name><column-value><![CDATA[");
		sb.append(getMidLocation1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>midLocation2</column-name><column-value><![CDATA[");
		sb.append(getMidLocation2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>active</column-name><column-value><![CDATA[");
		sb.append(getActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = BusRoute.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			BusRoute.class
		};
	private long _brId;
	private long _busId;
	private long _originalBusId;
	private boolean _setOriginalBusId;
	private long _startLocation;
	private long _originalStartLocation;
	private boolean _setOriginalStartLocation;
	private long _endLocation;
	private long _originalEndLocation;
	private boolean _setOriginalEndLocation;
	private long _midLocation1;
	private long _midLocation2;
	private boolean _active;
	private boolean _originalActive;
	private boolean _setOriginalActive;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private BusRoute _escapedModel;
}