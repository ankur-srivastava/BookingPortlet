/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.services.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Location service. Represents a row in the &quot;JPB_Location&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.services.model.impl.LocationModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.services.model.impl.LocationImpl}.
 * </p>
 *
 * @author Ankur Srivastava
 * @see Location
 * @see com.services.model.impl.LocationImpl
 * @see com.services.model.impl.LocationModelImpl
 * @generated
 */
public interface LocationModel extends BaseModel<Location> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a location model instance should use the {@link Location} interface instead.
	 */

	/**
	 * Returns the primary key of this location.
	 *
	 * @return the primary key of this location
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this location.
	 *
	 * @param primaryKey the primary key of this location
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the location ID of this location.
	 *
	 * @return the location ID of this location
	 */
	public long getLocationId();

	/**
	 * Sets the location ID of this location.
	 *
	 * @param locationId the location ID of this location
	 */
	public void setLocationId(long locationId);

	/**
	 * Returns the location name of this location.
	 *
	 * @return the location name of this location
	 */
	@AutoEscape
	public String getLocationName();

	/**
	 * Sets the location name of this location.
	 *
	 * @param locationName the location name of this location
	 */
	public void setLocationName(String locationName);

	/**
	 * Returns the street address1 of this location.
	 *
	 * @return the street address1 of this location
	 */
	@AutoEscape
	public String getStreetAddress1();

	/**
	 * Sets the street address1 of this location.
	 *
	 * @param streetAddress1 the street address1 of this location
	 */
	public void setStreetAddress1(String streetAddress1);

	/**
	 * Returns the street address2 of this location.
	 *
	 * @return the street address2 of this location
	 */
	@AutoEscape
	public String getStreetAddress2();

	/**
	 * Sets the street address2 of this location.
	 *
	 * @param streetAddress2 the street address2 of this location
	 */
	public void setStreetAddress2(String streetAddress2);

	/**
	 * Returns the location zip of this location.
	 *
	 * @return the location zip of this location
	 */
	@AutoEscape
	public String getLocationZip();

	/**
	 * Sets the location zip of this location.
	 *
	 * @param locationZip the location zip of this location
	 */
	public void setLocationZip(String locationZip);

	/**
	 * Returns the location city name of this location.
	 *
	 * @return the location city name of this location
	 */
	@AutoEscape
	public String getLocationCityName();

	/**
	 * Sets the location city name of this location.
	 *
	 * @param locationCityName the location city name of this location
	 */
	public void setLocationCityName(String locationCityName);

	/**
	 * Returns the location state name of this location.
	 *
	 * @return the location state name of this location
	 */
	@AutoEscape
	public String getLocationStateName();

	/**
	 * Sets the location state name of this location.
	 *
	 * @param locationStateName the location state name of this location
	 */
	public void setLocationStateName(String locationStateName);

	/**
	 * Returns the latitude of this location.
	 *
	 * @return the latitude of this location
	 */
	@AutoEscape
	public String getLatitude();

	/**
	 * Sets the latitude of this location.
	 *
	 * @param latitude the latitude of this location
	 */
	public void setLatitude(String latitude);

	/**
	 * Returns the longitude of this location.
	 *
	 * @return the longitude of this location
	 */
	@AutoEscape
	public String getLongitude();

	/**
	 * Sets the longitude of this location.
	 *
	 * @param longitude the longitude of this location
	 */
	public void setLongitude(String longitude);

	/**
	 * Returns the comments of this location.
	 *
	 * @return the comments of this location
	 */
	@AutoEscape
	public String getComments();

	/**
	 * Sets the comments of this location.
	 *
	 * @param comments the comments of this location
	 */
	public void setComments(String comments);

	/**
	 * Returns the active of this location.
	 *
	 * @return the active of this location
	 */
	public boolean getActive();

	/**
	 * Returns <code>true</code> if this location is active.
	 *
	 * @return <code>true</code> if this location is active; <code>false</code> otherwise
	 */
	public boolean isActive();

	/**
	 * Sets whether this location is active.
	 *
	 * @param active the active of this location
	 */
	public void setActive(boolean active);

	/**
	 * Returns the create date of this location.
	 *
	 * @return the create date of this location
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this location.
	 *
	 * @param createDate the create date of this location
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this location.
	 *
	 * @return the modified date of this location
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this location.
	 *
	 * @param modifiedDate the modified date of this location
	 */
	public void setModifiedDate(Date modifiedDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.services.model.Location location);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.services.model.Location> toCacheModel();

	@Override
	public com.services.model.Location toEscapedModel();

	@Override
	public com.services.model.Location toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}